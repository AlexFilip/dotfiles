#!/bin/sh

if [[ $# > 0 ]]; then
    URL="${@:$#}"
    shift
fi

CONFIG_DIR="$HOME/.config"
if [[ -n "$XDG_CONFIG_HOME" ]]; then
    CONFIG_DIR="$XDG_CONFIG_HOME"
fi

URL_LIST_FILE="$CONFIG_DIR/url-list/open-in-personal-profile"

source ~/bin/pvt/media-predicates

# A way of extracting the domain and extracting it from a url
# Does not match all urls, ex. ones with 'user:pass@', but I think this would get a good early check and it would make it easier to open certain domains in certain sites
# echo "$URL" | awk '/^https:\/\/[A-z\.]+/ {match($0, /^https:\/\/([A-z\.]+)/, r); print r[1]}'

should_open_in_personal_profile() {
    if [[ -f "$URL_LIST_FILE" ]] && [[ -n $(grep "$1" "$URL_LIST_FILE") ]]; then
	return 0
    fi
    return 1
}

if [[ "$URL" =~ ^https?://(www.)?youtube\.com.* ]] || [[ "$URL" =~ ^https://youtu\.be/.* ]]; then
    # exec flatpak run io.freetubeapp.FreeTube "$URL"
    exec mpv --save-position-on-quit "$URL"
elif is_media_url "$URL"; then
    exec open-app mpv --save-position-on-quit --force-window=yes --geometry=85%x85%+50%+50% "$URL" > /dev/null 2>&1 &
elif is_image_url "$URL"; then
    exec ~/bin/image-viewer "$URL" > /dev/null 2>&1 &
# elif should_open_in_personal_profile "$URL"; then
#     exec open-app chrome "$@" "$URL"
else
    # DEFAULT_BROWSER=chrome
    # DEFAULT_BROWSER=brave
    DEFAULT_BROWSER=zen # -P Main
    exec open-app "$DEFAULT_BROWSER" "$@" $URL
fi
